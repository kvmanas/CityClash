{
  "contractName": "CCmodifiers",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ID",
          "type": "uint256"
        }
      ],
      "name": "GetToopsDetails",
      "outputs": [
        {
          "name": "_Defence",
          "type": "uint256"
        },
        {
          "name": "_Attack",
          "type": "uint256"
        },
        {
          "name": "_Steal",
          "type": "uint256"
        },
        {
          "name": "_RequiredGold",
          "type": "uint256"
        },
        {
          "name": "_RequiredElixr",
          "type": "uint256"
        },
        {
          "name": "_RequiredGem",
          "type": "uint256"
        },
        {
          "name": "_Time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetBuildings",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "bytes32[]"
        },
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetAvailableSellOrders",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ID",
          "type": "uint256"
        },
        {
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "GetBuildingUpgrades",
      "outputs": [
        {
          "name": "_RequiredBuilding",
          "type": "uint256"
        },
        {
          "name": "_RequiredLevel",
          "type": "uint256"
        },
        {
          "name": "_RequiredGold",
          "type": "uint256"
        },
        {
          "name": "_RequiredElixr",
          "type": "uint256"
        },
        {
          "name": "_RequiredGem",
          "type": "uint256"
        },
        {
          "name": "_GoldRate",
          "type": "uint256"
        },
        {
          "name": "_ElixrRate",
          "type": "uint256"
        },
        {
          "name": "_GemReward",
          "type": "uint256"
        },
        {
          "name": "_Time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetTroops",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "bytes32[]"
        },
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "GetPlayerDetails",
      "outputs": [
        {
          "name": "_Towns",
          "type": "address[]"
        },
        {
          "name": "_GemsCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetVillages",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_village",
          "type": "address"
        }
      ],
      "name": "GetVillageOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetFilledSellOrders",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "GetPlayerGems",
      "outputs": [
        {
          "name": "_GemsCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_ID\",\"type\":\"uint256\"}],\"name\":\"GetToopsDetails\",\"outputs\":[{\"name\":\"_Defence\",\"type\":\"uint256\"},{\"name\":\"_Attack\",\"type\":\"uint256\"},{\"name\":\"_Steal\",\"type\":\"uint256\"},{\"name\":\"_RequiredGold\",\"type\":\"uint256\"},{\"name\":\"_RequiredElixr\",\"type\":\"uint256\"},{\"name\":\"_RequiredGem\",\"type\":\"uint256\"},{\"name\":\"_Time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetBuildings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"bytes32[]\"},{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetAvailableSellOrders\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ID\",\"type\":\"uint256\"},{\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"GetBuildingUpgrades\",\"outputs\":[{\"name\":\"_RequiredBuilding\",\"type\":\"uint256\"},{\"name\":\"_RequiredLevel\",\"type\":\"uint256\"},{\"name\":\"_RequiredGold\",\"type\":\"uint256\"},{\"name\":\"_RequiredElixr\",\"type\":\"uint256\"},{\"name\":\"_RequiredGem\",\"type\":\"uint256\"},{\"name\":\"_GoldRate\",\"type\":\"uint256\"},{\"name\":\"_ElixrRate\",\"type\":\"uint256\"},{\"name\":\"_GemReward\",\"type\":\"uint256\"},{\"name\":\"_Time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetTroops\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"bytes32[]\"},{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"GetPlayerDetails\",\"outputs\":[{\"name\":\"_Towns\",\"type\":\"address[]\"},{\"name\":\"_GemsCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetVillages\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_village\",\"type\":\"address\"}],\"name\":\"GetVillageOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetFilledSellOrders\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"GetPlayerGems\",\"outputs\":[{\"name\":\"_GemsCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"GetAvailableSellOrders()\":{\"return\":\"village address list\\rseller address list\\rthis village position in seller town list\\rsell price list\\r\"},\"GetBuildingUpgrades(uint256,uint256)\":{\"params\":{\"_ID\":\"Building ID\\r\",\"_level\":\"Building level\\r\"},\"return\":\"_RequiredBuilding Required Building ID to Upgarde\\r_RequiredLevel Required Building Level to Upgrade\\r_RequiredGold  Required Gold to upgrade\\r_RequiredElixr Required Elixr to upgrade\\r_RequiredGem Required Gem to upgrade\\r_GoldRate Change in gold production rate\\r_ElixrRate Change in elixr production rate\\r_GemReward amount of gem reward to user\\r_Time Cool off time to next Upgrade\\r\"},\"GetBuildings()\":{\"return\":\"_id array of Builing IDs \\r_name array of name of builings\\r_image array of swarm hash of builings\\r\"},\"GetFilledSellOrders()\":{\"return\":\"village address list\\rseller address list\\rbuyer address list\\rsell price list\\r\"},\"GetPlayerDetails(address)\":{\"params\":{\"_player\":\"Player Address\\r\"},\"return\":\"_Towns Player TownList\\r_GemsCount Player  Gem balance\\r\"},\"GetPlayerGems(address)\":{\"params\":{\"_player\":\"Player Address\\r\"},\"return\":\"_GemsCount Player  Gem balance\\r\"},\"GetToopsDetails(uint256)\":{\"params\":{\"_ID\":\"troop ID\\r\"},\"return\":\"_Defence Change in Defence power\\r_Attack Change in Attack Power\\r_Steal Change in Steal power\\r_RequiredGold  Required Gold to upgrade\\r_RequiredElixr Required Elixr to upgrade\\r_RequiredGem Required Gem to upgrade\\r_Time Time Required to upgrade troop\\r\"},\"GetTroops()\":{\"return\":\"_id array of troop IDs\\r_name array of name of troop\\r_image array of swarm hash of troop\\r\"},\"GetVillageOwner(address)\":{\"params\":{\"_village\":\"Village address\\r\"},\"return\":\"Village owner address\\r\"},\"GetVillages()\":{\"return\":\"Villages\\r\"}}},\"userdoc\":{\"methods\":{\"GetAvailableSellOrders()\":{\"notice\":\"function to Get Filled Sell Orders .\\r\"},\"GetBuildingUpgrades(uint256,uint256)\":{\"notice\":\"function to Get Building Upgarede Detail .\\r\"},\"GetBuildings()\":{\"notice\":\"function to Get All Builings\\r\"},\"GetFilledSellOrders()\":{\"notice\":\"function to Get Filled Sell Orders .\\r\"},\"GetPlayerDetails(address)\":{\"notice\":\"function to Get Player Details .\\r\"},\"GetPlayerGems(address)\":{\"notice\":\"function to Get Player Gem count\\r\"},\"GetToopsDetails(uint256)\":{\"notice\":\"function to Get Troops training Detail .\\r\"},\"GetTroops()\":{\"notice\":\"function to Get All troops\\r\"},\"GetVillageOwner(address)\":{\"notice\":\"function to Get Village owner .\\r\"},\"GetVillages()\":{\"notice\":\"function to Get All Villages Excluding Caller Village.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-modifiers.sol\":\"CCmodifiers\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-library.sol\":{\"keccak256\":\"0xcae8877f4e2f146cea62a8894fb7bdedd8bc18e8e2cf27428998029ef95a91f7\",\"urls\":[\"bzzr://5138d0e6b90f8ea79ee245656366b943043d67d9db9bf7095f01cb0b852a1e40\"]},\"/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-modifiers.sol\":{\"keccak256\":\"0x4f8bc97e94de72ac31552faa9fb1166837b76af1016d360f8b86ec832bfb3cd7\",\"urls\":[\"bzzr://cb0c47df04a64daee920a571cbc529caed0c11f37fd2f15b7f6777e3a88dfcea\"]},\"/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-variables.sol\":{\"keccak256\":\"0x881c1a38207aa12221fef69f27a5a54049b342e09991cdf587d05c51cb55d291\",\"urls\":[\"bzzr://d98b7614743597e0afdc57554679371a4b2a9e03a7df077e16e992b12f6e395e\"]},\"/E/KBA/ethereum/project/Docker/Truffle/contracts/SafeMath.sol\":{\"keccak256\":\"0x66fe514893e3d3ec9195b098efe6dd15cc0e7bc68e0ea0d74bc01bbee86eb2ed\",\"urls\":[\"bzzr://84d1179a81f73ab15313f642ab7b0d4dfd0ae92417b02c7d98f6e9c1c495aef1\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611bf5806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b3c49c7711610066578063b3c49c77146104f0578063c01ed26b14610590578063cf192ea2146105ef578063d00bd52914610673578063f6cfaabe146107f25761009e565b80630876a5c3146100a3578063411356781461010f5780636eb285c1146101fe5780638410b8c61461037d578063a450091d14610401575b600080fd5b6100cf600480360360208110156100b957600080fd5b810190808035906020019092919050505061084a565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b610117610970565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015610162578082015181840152602081019050610147565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156101a4578082015181840152602081019050610189565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156101e65780820151818401526020810190506101cb565b50505050905001965050505050505060405180910390f35b610206610b78565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b8381101561025957808201518184015260208101905061023e565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b8381101561029b578082015181840152602081019050610280565b50505050905001868103845289818151815260200191508051906020019060200280838360005b838110156102dd5780820151818401526020810190506102c2565b50505050905001868103835288818151815260200191508051906020019060200280838360005b8381101561031f578082015181840152602081019050610304565b50505050905001868103825287818151815260200191508051906020019060200280838360005b83811015610361578082015181840152602081019050610346565b505050509050019a505050505050505050505060405180910390f35b6103b36004803603604081101561039357600080fd5b810190808035906020019092919080359060200190929190505050610f03565b604051808a8152602001898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001995050505050505050505060405180910390f35b610409611115565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015610454578082015181840152602081019050610439565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561049657808201518184015260208101905061047b565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156104d85780820151818401526020810190506104bd565b50505050905001965050505050505060405180910390f35b6105326004803603602081101561050657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061131d565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561057b578082015181840152602081019050610560565b50505050905001935050505060405180910390f35b610598611439565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105db5780820151818401526020810190506105c0565b505050509050019250505060405180910390f35b6106316004803603602081101561060557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611735565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61067b6117a0565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b838110156106ce5780820151818401526020810190506106b3565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b838110156107105780820151818401526020810190506106f5565b50505050905001868103845289818151815260200191508051906020019060200280838360005b83811015610752578082015181840152602081019050610737565b50505050905001868103835288818151815260200191508051906020019060200280838360005b83811015610794578082015181840152602081019050610779565b50505050905001868103825287818151815260200191508051906020019060200280838360005b838110156107d65780820151818401526020810190506107bb565b505050509050019a505050505050505050505060405180910390f35b6108346004803603602081101561080857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b7b565b6040518082815260200191505060405180910390f35b600080600080600080600080600501888154811061086457fe5b90600052602060002090600a02016003016000015496506000600501888154811061088b57fe5b90600052602060002090600a0201600301600101549550600060050188815481106108b257fe5b90600052602060002090600a0201600301600201549450600060050188815481106108d957fe5b90600052602060002090600a02016003016003015493506000600501888154811061090057fe5b90600052602060002090600a02016003016004015492506000600501888154811061092757fe5b90600052602060002090600a02016003016005015491506000600501888154811061094e57fe5b90600052602060002090600a0201600301600601549050919395979092949650565b6060806060600080600090505b6000600401805490508110156109d7576000600401818154811061099d57fe5b906000526020600020906004020160020160009054906101000a900460ff16156109ca5781806001019250505b808060010191505061097d565b50606081604051908082528060200260200182016040528015610a095781602001602082028038833980820191505090505b509050606082604051908082528060200260200182016040528015610a3d5781602001602082028038833980820191505090505b509050606083604051908082528060200260200182016040528015610a715781602001602082028038833980820191505090505b5090506000935060008090505b600060040180549050811015610b655760006004018181548110610a9e57fe5b906000526020600020906004020160020160009054906101000a900460ff1615610b585780828681518110610acf57fe5b60200260200101818152505060006004018181548110610aeb57fe5b906000526020600020906004020160000154848681518110610b0957fe5b60200260200101818152505060006004018181548110610b2557fe5b906000526020600020906004020160010154838681518110610b4357fe5b60200260200101818152505084806001019550505b8080600101915050610a7e565b5080838396509650965050505050909192565b6060806060806060600080600090505b600060030180549050811015610be15760006003018181548110610ba857fe5b906000526020600020906006020160050160009054906101000a900460ff16610bd45781806001019250505b8080600101915050610b88565b50606081604051908082528060200260200182016040528015610c135781602001602082028038833980820191505090505b509050606082604051908082528060200260200182016040528015610c475781602001602082028038833980820191505090505b509050606083604051908082528060200260200182016040528015610c7b5781602001602082028038833980820191505090505b509050606084604051908082528060200260200182016040528015610caf5781602001602082028038833980820191505090505b509050606085604051908082528060200260200182016040528015610ce35781602001602082028038833980820191505090505b5090506000955060008090505b600060030180549050811015610ee65760006003018181548110610d1057fe5b906000526020600020906006020160050160009054906101000a900460ff16610ed95760006003018181548110610d4357fe5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868881518110610d8157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110610dcb57fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858881518110610e0957fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110610e5357fe5b906000526020600020906006020160020154848881518110610e7157fe5b60200260200101818152505060006003018181548110610e8d57fe5b906000526020600020906006020160040154838881518110610eab57fe5b60200260200101818152505080828881518110610ec457fe5b60200260200101818152505086806001019750505b8080600101915050610cf0565b5084848484849a509a509a509a509a505050505050509091929394565b6000806000806000806000806000806004018b81548110610f2057fe5b906000526020600020906004020160030160008b815260200190815260200160002060000154985060006004018b81548110610f5857fe5b906000526020600020906004020160030160008b815260200190815260200160002060010154975060006004018b81548110610f9057fe5b906000526020600020906004020160030160008b815260200190815260200160002060020154965060006004018b81548110610fc857fe5b906000526020600020906004020160030160008b815260200190815260200160002060030154955060006004018b8154811061100057fe5b906000526020600020906004020160030160008b815260200190815260200160002060040154945060006004018b8154811061103857fe5b906000526020600020906004020160030160008b815260200190815260200160002060050154935060006004018b8154811061107057fe5b906000526020600020906004020160030160008b815260200190815260200160002060060154925060006004018b815481106110a857fe5b906000526020600020906004020160030160008b815260200190815260200160002060070154915060006004018b815481106110e057fe5b906000526020600020906004020160030160008b81526020019081526020016000206008015490509295985092959850929598565b6060806060600080600090505b60006005018054905081101561117c576000600501818154811061114257fe5b90600052602060002090600a020160020160009054906101000a900460ff161561116f5781806001019250505b8080600101915050611122565b506060816040519080825280602002602001820160405280156111ae5781602001602082028038833980820191505090505b5090506060826040519080825280602002602001820160405280156111e25781602001602082028038833980820191505090505b5090506060836040519080825280602002602001820160405280156112165781602001602082028038833980820191505090505b5090506000935060008090505b60006005018054905081101561130a576000600501818154811061124357fe5b90600052602060002090600a020160020160009054906101000a900460ff16156112fd578082868151811061127457fe5b6020026020010181815250506000600501818154811061129057fe5b90600052602060002090600a0201600001548486815181106112ae57fe5b602002602001018181525050600060050181815481106112ca57fe5b90600052602060002090600a0201600101548386815181106112e857fe5b60200260200101818152505084806001019550505b8080600101915050611223565b5080838396509650965050505050909192565b606060008060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156113e557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161139b575b50505050509150600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b6060600080600090505b600080018054905081101561155857600073ffffffffffffffffffffffffffffffffffffffff166114ac60008001838154811061147c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff161415801561153d57503373ffffffffffffffffffffffffffffffffffffffff166115246000800183815481106114f457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561154b5781806001019250505b8080600101915050611443565b5060608160405190808252806020026020018201604052801561158a5781602001602082028038833980820191505090505b5090506000915060008090505b600080018054905081101561172c57600073ffffffffffffffffffffffffffffffffffffffff166116006000800183815481106115d057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff161415801561169157503373ffffffffffffffffffffffffffffffffffffffff1661167860008001838154811061164857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561171f576000800181815481106116a557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168284815181106116dc57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082806001019350505b8080600101915050611597565b50809250505090565b60008060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060806060806060600080600090505b60006003018054905081101561180a57600060030181815481106117d057fe5b906000526020600020906006020160050160009054906101000a900460ff16156117fd5781806001019250505b80806001019150506117b0565b5060608160405190808252806020026020018201604052801561183c5781602001602082028038833980820191505090505b5090506060826040519080825280602002602001820160405280156118705781602001602082028038833980820191505090505b5090506060836040519080825280602002602001820160405280156118a45781602001602082028038833980820191505090505b5090506060846040519080825280602002602001820160405280156118d85781602001602082028038833980820191505090505b50905060608560405190808252806020026020018201604052801561190c5781602001602082028038833980820191505090505b5090506000955060008090505b600060030180549050811015611b5e576000600301818154811061193957fe5b906000526020600020906006020160050160009054906101000a900460ff1615611b51576000600301818154811061196d57fe5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168688815181106119ab57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600060030181815481106119f557fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858881518110611a3357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110611a7d57fe5b906000526020600020906006020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848881518110611abb57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110611b0557fe5b906000526020600020906006020160040154838881518110611b2357fe5b60200260200101818152505080828881518110611b3c57fe5b60200260200101818152505086806001019750505b8080600101915050611919565b5084848484849a509a509a509a509a505050505050509091929394565b60008060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905091905056fea165627a7a72305820191fd4a525de94ef34c078f7789bbb386856e387b118fbb4088e5f29fd8e15910029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b3c49c7711610066578063b3c49c77146104f0578063c01ed26b14610590578063cf192ea2146105ef578063d00bd52914610673578063f6cfaabe146107f25761009e565b80630876a5c3146100a3578063411356781461010f5780636eb285c1146101fe5780638410b8c61461037d578063a450091d14610401575b600080fd5b6100cf600480360360208110156100b957600080fd5b810190808035906020019092919050505061084a565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b610117610970565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015610162578082015181840152602081019050610147565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156101a4578082015181840152602081019050610189565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156101e65780820151818401526020810190506101cb565b50505050905001965050505050505060405180910390f35b610206610b78565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b8381101561025957808201518184015260208101905061023e565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b8381101561029b578082015181840152602081019050610280565b50505050905001868103845289818151815260200191508051906020019060200280838360005b838110156102dd5780820151818401526020810190506102c2565b50505050905001868103835288818151815260200191508051906020019060200280838360005b8381101561031f578082015181840152602081019050610304565b50505050905001868103825287818151815260200191508051906020019060200280838360005b83811015610361578082015181840152602081019050610346565b505050509050019a505050505050505050505060405180910390f35b6103b36004803603604081101561039357600080fd5b810190808035906020019092919080359060200190929190505050610f03565b604051808a8152602001898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001995050505050505050505060405180910390f35b610409611115565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015610454578082015181840152602081019050610439565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561049657808201518184015260208101905061047b565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156104d85780820151818401526020810190506104bd565b50505050905001965050505050505060405180910390f35b6105326004803603602081101561050657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061131d565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561057b578082015181840152602081019050610560565b50505050905001935050505060405180910390f35b610598611439565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105db5780820151818401526020810190506105c0565b505050509050019250505060405180910390f35b6106316004803603602081101561060557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611735565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61067b6117a0565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b838110156106ce5780820151818401526020810190506106b3565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b838110156107105780820151818401526020810190506106f5565b50505050905001868103845289818151815260200191508051906020019060200280838360005b83811015610752578082015181840152602081019050610737565b50505050905001868103835288818151815260200191508051906020019060200280838360005b83811015610794578082015181840152602081019050610779565b50505050905001868103825287818151815260200191508051906020019060200280838360005b838110156107d65780820151818401526020810190506107bb565b505050509050019a505050505050505050505060405180910390f35b6108346004803603602081101561080857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b7b565b6040518082815260200191505060405180910390f35b600080600080600080600080600501888154811061086457fe5b90600052602060002090600a02016003016000015496506000600501888154811061088b57fe5b90600052602060002090600a0201600301600101549550600060050188815481106108b257fe5b90600052602060002090600a0201600301600201549450600060050188815481106108d957fe5b90600052602060002090600a02016003016003015493506000600501888154811061090057fe5b90600052602060002090600a02016003016004015492506000600501888154811061092757fe5b90600052602060002090600a02016003016005015491506000600501888154811061094e57fe5b90600052602060002090600a0201600301600601549050919395979092949650565b6060806060600080600090505b6000600401805490508110156109d7576000600401818154811061099d57fe5b906000526020600020906004020160020160009054906101000a900460ff16156109ca5781806001019250505b808060010191505061097d565b50606081604051908082528060200260200182016040528015610a095781602001602082028038833980820191505090505b509050606082604051908082528060200260200182016040528015610a3d5781602001602082028038833980820191505090505b509050606083604051908082528060200260200182016040528015610a715781602001602082028038833980820191505090505b5090506000935060008090505b600060040180549050811015610b655760006004018181548110610a9e57fe5b906000526020600020906004020160020160009054906101000a900460ff1615610b585780828681518110610acf57fe5b60200260200101818152505060006004018181548110610aeb57fe5b906000526020600020906004020160000154848681518110610b0957fe5b60200260200101818152505060006004018181548110610b2557fe5b906000526020600020906004020160010154838681518110610b4357fe5b60200260200101818152505084806001019550505b8080600101915050610a7e565b5080838396509650965050505050909192565b6060806060806060600080600090505b600060030180549050811015610be15760006003018181548110610ba857fe5b906000526020600020906006020160050160009054906101000a900460ff16610bd45781806001019250505b8080600101915050610b88565b50606081604051908082528060200260200182016040528015610c135781602001602082028038833980820191505090505b509050606082604051908082528060200260200182016040528015610c475781602001602082028038833980820191505090505b509050606083604051908082528060200260200182016040528015610c7b5781602001602082028038833980820191505090505b509050606084604051908082528060200260200182016040528015610caf5781602001602082028038833980820191505090505b509050606085604051908082528060200260200182016040528015610ce35781602001602082028038833980820191505090505b5090506000955060008090505b600060030180549050811015610ee65760006003018181548110610d1057fe5b906000526020600020906006020160050160009054906101000a900460ff16610ed95760006003018181548110610d4357fe5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868881518110610d8157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110610dcb57fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858881518110610e0957fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110610e5357fe5b906000526020600020906006020160020154848881518110610e7157fe5b60200260200101818152505060006003018181548110610e8d57fe5b906000526020600020906006020160040154838881518110610eab57fe5b60200260200101818152505080828881518110610ec457fe5b60200260200101818152505086806001019750505b8080600101915050610cf0565b5084848484849a509a509a509a509a505050505050509091929394565b6000806000806000806000806000806004018b81548110610f2057fe5b906000526020600020906004020160030160008b815260200190815260200160002060000154985060006004018b81548110610f5857fe5b906000526020600020906004020160030160008b815260200190815260200160002060010154975060006004018b81548110610f9057fe5b906000526020600020906004020160030160008b815260200190815260200160002060020154965060006004018b81548110610fc857fe5b906000526020600020906004020160030160008b815260200190815260200160002060030154955060006004018b8154811061100057fe5b906000526020600020906004020160030160008b815260200190815260200160002060040154945060006004018b8154811061103857fe5b906000526020600020906004020160030160008b815260200190815260200160002060050154935060006004018b8154811061107057fe5b906000526020600020906004020160030160008b815260200190815260200160002060060154925060006004018b815481106110a857fe5b906000526020600020906004020160030160008b815260200190815260200160002060070154915060006004018b815481106110e057fe5b906000526020600020906004020160030160008b81526020019081526020016000206008015490509295985092959850929598565b6060806060600080600090505b60006005018054905081101561117c576000600501818154811061114257fe5b90600052602060002090600a020160020160009054906101000a900460ff161561116f5781806001019250505b8080600101915050611122565b506060816040519080825280602002602001820160405280156111ae5781602001602082028038833980820191505090505b5090506060826040519080825280602002602001820160405280156111e25781602001602082028038833980820191505090505b5090506060836040519080825280602002602001820160405280156112165781602001602082028038833980820191505090505b5090506000935060008090505b60006005018054905081101561130a576000600501818154811061124357fe5b90600052602060002090600a020160020160009054906101000a900460ff16156112fd578082868151811061127457fe5b6020026020010181815250506000600501818154811061129057fe5b90600052602060002090600a0201600001548486815181106112ae57fe5b602002602001018181525050600060050181815481106112ca57fe5b90600052602060002090600a0201600101548386815181106112e857fe5b60200260200101818152505084806001019550505b8080600101915050611223565b5080838396509650965050505050909192565b606060008060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156113e557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161139b575b50505050509150600060020160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b6060600080600090505b600080018054905081101561155857600073ffffffffffffffffffffffffffffffffffffffff166114ac60008001838154811061147c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff161415801561153d57503373ffffffffffffffffffffffffffffffffffffffff166115246000800183815481106114f457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561154b5781806001019250505b8080600101915050611443565b5060608160405190808252806020026020018201604052801561158a5781602001602082028038833980820191505090505b5090506000915060008090505b600080018054905081101561172c57600073ffffffffffffffffffffffffffffffffffffffff166116006000800183815481106115d057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff161415801561169157503373ffffffffffffffffffffffffffffffffffffffff1661167860008001838154811061164857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611735565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561171f576000800181815481106116a557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168284815181106116dc57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082806001019350505b8080600101915050611597565b50809250505090565b60008060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060806060806060600080600090505b60006003018054905081101561180a57600060030181815481106117d057fe5b906000526020600020906006020160050160009054906101000a900460ff16156117fd5781806001019250505b80806001019150506117b0565b5060608160405190808252806020026020018201604052801561183c5781602001602082028038833980820191505090505b5090506060826040519080825280602002602001820160405280156118705781602001602082028038833980820191505090505b5090506060836040519080825280602002602001820160405280156118a45781602001602082028038833980820191505090505b5090506060846040519080825280602002602001820160405280156118d85781602001602082028038833980820191505090505b50905060608560405190808252806020026020018201604052801561190c5781602001602082028038833980820191505090505b5090506000955060008090505b600060030180549050811015611b5e576000600301818154811061193957fe5b906000526020600020906006020160050160009054906101000a900460ff1615611b51576000600301818154811061196d57fe5b906000526020600020906006020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168688815181106119ab57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600060030181815481106119f557fe5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858881518110611a3357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110611a7d57fe5b906000526020600020906006020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848881518110611abb57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006003018181548110611b0557fe5b906000526020600020906006020160040154838881518110611b2357fe5b60200260200101818152505080828881518110611b3c57fe5b60200260200101818152505086806001019750505b8080600101915050611919565b5084848484849a509a509a509a509a505050505050509091929394565b60008060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905091905056fea165627a7a72305820191fd4a525de94ef34c078f7789bbb386856e387b118fbb4088e5f29fd8e15910029",
  "sourceMap": "55:2264:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:2264:1;;;;;;;",
  "deployedSourceMap": "55:2264:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;55:2264:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6694:592:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6694:592:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7487:773;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7487:773:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7487:773:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7487:773:2;;;;;;;;;;;;;;;;;;;;;2166:1158;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2166:1158:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2166:1158:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2166:1158:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2166:1158:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2166:1158:2;;;;;;;;;;;;;;;;;;;;;;;;;5305:938;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5305:938:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8450:752;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8450:752:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8450:752:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8450:752:2;;;;;;;;;;;;;;;;;;;;;367:219;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;367:219:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;367:219:2;;;;;;;;;;;;;;;;;;986:693;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;986:693:2;;;;;;;;;;;;;;;;;1816:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1816:124:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3527:1124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3527:1124:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3527:1124:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3527:1124:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3527:1124:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3527:1124:2;;;;;;;;;;;;;;;;;;;;;;;;;733:143;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;733:143:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6694:592;6757:16;6775:15;6792:14;6808:21;6836:22;6860:20;6882:13;6918:4;:11;;6930:3;6918:16;;;;;;;;;;;;;;;;;;:22;;:30;;;6907:41;;6969:4;:11;;6981:3;6969:16;;;;;;;;;;;;;;;;;;:22;;:29;;;6959:39;;7018:4;:11;;7030:3;7018:16;;;;;;;;;;;;;;;;;;:22;;:28;;;7009:37;;7073:4;:11;;7085:3;7073:16;;;;;;;;;;;;;;;;;;:22;;:35;;;7057:51;;7136:4;:11;;7148:3;7136:16;;;;;;;;;;;;;;;;;;:22;;:36;;;7119:53;;7198:4;:11;;7210:3;7198:16;;;;;;;;;;;;;;;;;;:22;;:34;;;7183:49;;7251:4;:11;;7263:3;7251:16;;;;;;;;;;;;;;;;;;:22;;:27;;;7243:35;;6694:592;;;;;;;;;:::o;7487:773::-;7531:16;7549;7566;7594:9;7619;7631:1;7619:13;;7614:143;7638:4;:14;;:21;;;;7634:1;:25;7614:143;;;7684:4;:14;;7699:1;7684:17;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;7681:65;;;7727:3;;;;;;;7681:65;7661:3;;;;;;;7614:143;;;;7767:22;7806:1;7792:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;7792:16:2;;;;7767:41;;7819:23;7859:1;7845:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;7845:16:2;;;;7819:42;;7872:20;7909:1;7895:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;7895:16:2;;;;7872:39;;7926:1;7922:5;;7943:9;7955:1;7943:13;;7938:278;7962:4;:14;;:21;;;;7958:1;:25;7938:278;;;8008:4;:14;;8023:1;8008:17;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;8005:200;;;8060:1;8051:3;8055:1;8051:6;;;;;;;;;;;;;:10;;;;;8091:4;:14;;8106:1;8091:17;;;;;;;;;;;;;;;;;;:22;;;8080:5;8086:1;8080:8;;;;;;;;;;;;;:33;;;;;8144:4;:14;;8159:1;8144:17;;;;;;;;;;;;;;;;;;:23;;;8132:6;8139:1;8132:9;;;;;;;;;;;;;:35;;;;;8186:3;;;;;;;8005:200;7985:3;;;;;;;7938:278;;;;8234:3;8238:5;8245:6;8226:26;;;;;;;;;;7487:773;;;:::o;2166:1158::-;2220:16;2237;2254;2271;2289;2317:9;2342;2354:1;2342:13;;2337:149;2361:4;:15;;:22;;;;2357:1;:26;2337:149;;;2409:4;:15;;2425:1;2409:18;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2405:70;;2456:3;;;;;;;2405:70;2385:3;;;;;;;2337:149;;;;2496:29;2542:1;2528:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2528:16:2;;;;2496:48;;2555:24;2596:1;2582:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2582:16:2;;;;2555:43;;2609:30;2656:1;2642:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2642:16:2;;;;2609:49;;2669:27;2713:1;2699:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2699:16:2;;;;2669:46;;2726:26;2769:1;2755:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2755:16:2;;;;2726:45;;2786:1;2782:5;;2803:9;2815:1;2803:13;;2798:440;2822:4;:15;;:22;;;;2818:1;:26;2798:440;;;2870:4;:15;;2886:1;2870:18;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2866:361;;2935:4;:15;;2951:1;2935:18;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;2917:12;2930:1;2917:15;;;;;;;;;;;;;:48;;;;;;;;;;;2997:4;:15;;3013:1;2997:18;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2984:7;2992:1;2984:10;;;;;;;;;;;;;:38;;;;;;;;;;;3060:4;:15;;3076:1;3060:18;;;;;;;;;;;;;;;;;;:31;;;3041:13;3055:1;3041:16;;;;;;;;;;;;;:50;;;;;3126:4;:15;;3142:1;3126:18;;;;;;;;;;;;;;;;;;:28;;;3110:10;3121:1;3110:13;;;;;;;;;;;;;:44;;;;;3188:1;3173:9;3183:1;3173:12;;;;;;;;;;;;;:16;;;;;3208:3;;;;;;;2866:361;2846:3;;;;;;;2798:440;;;;3256:12;3270:7;3279:13;3294:10;3306:9;3248:68;;;;;;;;;;;;;;;;2166:1158;;;;;:::o;5305:938::-;5388:25;5415:22;5439:21;5462:22;5491:20;5513:17;5532:18;5552;5572:13;5617:4;:14;;5632:3;5617:19;;;;;;;;;;;;;;;;;;:27;;:35;5645:6;5617:35;;;;;;;;;;;:52;;;5597:72;;5697:4;:14;;5712:3;5697:19;;;;;;;;;;;;;;;;;;:27;;:35;5725:6;5697:35;;;;;;;;;;;:49;;;5680:66;;5773:4;:14;;5788:3;5773:19;;;;;;;;;;;;;;;;;;:27;;:35;5801:6;5773:35;;;;;;;;;;;:48;;;5757:64;;5849:4;:14;;5864:3;5849:19;;;;;;;;;;;;;;;;;;:27;;:35;5877:6;5849:35;;;;;;;;;;;:49;;;5832:66;;5924:4;:14;;5939:3;5924:19;;;;;;;;;;;;;;;;;;:27;;:35;5952:6;5924:35;;;;;;;;;;;:47;;;5909:62;;5994:4;:14;;6009:3;5994:19;;;;;;;;;;;;;;;;;;:27;;:35;6022:6;5994:35;;;;;;;;;;;:44;;;5982:56;;6062:4;:14;;6077:3;6062:19;;;;;;;;;;;;;;;;;;:27;;:35;6090:6;6062:35;;;;;;;;;;;:45;;;6049:58;;6131:4;:14;;6146:3;6131:19;;;;;;;;;;;;;;;;;;:27;;:35;6159:6;6131:35;;;;;;;;;;;:45;;;6118:58;;6195:4;:14;;6210:3;6195:19;;;;;;;;;;;;;;;;;;:27;;:35;6223:6;6195:35;;;;;;;;;;;:40;;;6187:48;;5305:938;;;;;;;;;;;:::o;8450:752::-;8491:16;8509;8526;8554:9;8579;8591:1;8579:13;;8574:137;8598:4;:11;;:18;;;;8594:1;:22;8574:137;;;8641:4;:11;;8653:1;8641:14;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;8638:62;;;8681:3;;;;;;;8638:62;8618:3;;;;;;;8574:137;;;;8721:22;8760:1;8746:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8746:16:2;;;;8721:41;;8773:23;8813:1;8799:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8799:16:2;;;;8773:42;;8826:20;8863:1;8849:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8849:16:2;;;;8826:39;;8880:1;8876:5;;8897:9;8909:1;8897:13;;8892:266;8916:4;:11;;:18;;;;8912:1;:22;8892:266;;;8959:4;:11;;8971:1;8959:14;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;8956:191;;;9008:1;8999:3;9003:1;8999:6;;;;;;;;;;;;;:10;;;;;9039:4;:11;;9051:1;9039:14;;;;;;;;;;;;;;;;;;:19;;;9028:5;9034:1;9028:8;;;;;;;;;;;;;:30;;;;;9089:4;:11;;9101:1;9089:14;;;;;;;;;;;;;;;;;;:20;;;9077:6;9084:1;9077:9;;;;;;;;;;;;;:32;;;;;9128:3;;;;;;;8956:191;8936:3;;;;;;;8892:266;;;;9176:3;9180:5;9187:6;9168:26;;;;;;;;;;8450:752;;;:::o;367:219::-;431:23;457:18;496:4;:12;;:21;509:7;496:21;;;;;;;;;;;;;;;:27;;487:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:4;:12;;:21;560:7;547:21;;;;;;;;;;;;;;;:31;;;534:44;;367:219;;;:::o;986:693::-;1029:16;1057:9;1082;1094:1;1082:13;;1077:217;1101:4;:13;;:20;;;;1097:1;:24;1077:217;;;1191:1;1146:47;;:33;1162:4;:13;;1176:1;1162:16;;;;;;;;;;;;;;;;;;;;;;;;;1146:15;:33::i;:::-;:47;;;;:98;;;;;1234:10;1197:47;;:33;1213:4;:13;;1227:1;1213:16;;;;;;;;;;;;;;;;;;;;;;;;;1197:15;:33::i;:::-;:47;;;;1146:98;1143:140;;;1264:3;;;;;;;1143:140;1123:3;;;;;;;1077:217;;;;1304:26;1347:1;1333:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1333:16:2;;;;1304:45;;1364:1;1360:5;;1381:9;1393:1;1381:13;;1376:269;1400:4;:13;;:20;;;;1396:1;:24;1376:269;;;1490:1;1445:47;;:33;1461:4;:13;;1475:1;1461:16;;;;;;;;;;;;;;;;;;;;;;;;;1445:15;:33::i;:::-;:47;;;;:98;;;;;1533:10;1496:47;;:33;1512:4;:13;;1526:1;1512:16;;;;;;;;;;;;;;;;;;;;;;;;;1496:15;:33::i;:::-;:47;;;;1445:98;1442:192;;;1579:4;:13;;1593:1;1579:16;;;;;;;;;;;;;;;;;;;;;;;;;1564:9;1574:1;1564:12;;;;;;;;;;;;;:31;;;;;;;;;;;1615:3;;;;;;;1442:192;1422:3;;;;;;;1376:269;;;;1662:9;1655:16;;;;986:693;:::o;1816:124::-;1879:7;1905:4;:17;;:27;1923:8;1905:27;;;;;;;;;;;;;;;;;;;;;;;;;1898:34;;1816:124;;;:::o;3527:1124::-;3578:16;3595;3612;3629;3646;3674:9;3699;3711:1;3699:13;;3694:148;3718:4;:15;;:22;;;;3714:1;:26;3694:148;;;3765:4;:15;;3781:1;3765:18;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3762:69;;;3812:3;;;;;;;3762:69;3742:3;;;;;;;3694:148;;;;3852:29;3898:1;3884:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3884:16:2;;;;3852:48;;3911:24;3952:1;3938:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3938:16:2;;;;3911:43;;3965:23;4005:1;3991:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;3991:16:2;;;;3965:42;;4018:27;4062:1;4048:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4048:16:2;;;;4018:46;;4075:26;4118:1;4104:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4104:16:2;;;;4075:45;;4135:1;4131:5;;4152:9;4164:1;4152:13;;4147:425;4171:4;:15;;:22;;;;4167:1;:26;4147:425;;;4218:4;:15;;4234:1;4218:18;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4215:346;;;4283:4;:15;;4299:1;4283:18;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;4265:12;4278:1;4265:15;;;;;;;;;;;;;:48;;;;;;;;;;;4345:4;:15;;4361:1;4345:18;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;4332:7;4340:1;4332:10;;;;;;;;;;;;;:38;;;;;;;;;;;4401:4;:15;;4417:1;4401:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;4389:6;4396:1;4389:9;;;;;;;;;;;;;:36;;;;;;;;;;;4460:4;:15;;4476:1;4460:18;;;;;;;;;;;;;;;;;;:28;;;4444:10;4455:1;4444:13;;;;;;;;;;;;;:44;;;;;4522:1;4507:9;4517:1;4507:12;;;;;;;;;;;;;:16;;;;;4542:3;;;;;;;4215:346;4195:3;;;;;;;4147:425;;;;4590:12;4604:7;4613:6;4621:10;4633:9;4582:61;;;;;;;;;;;;;;;;3527:1124;;;;;:::o;733:143::-;794:18;837:4;:12;;:21;850:7;837:21;;;;;;;;;;;;;;;:31;;;824:44;;733:143;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\nimport \"./CC-variables.sol\";\r\ncontract CCmodifiers is CCvariables{\r\n    //check User is Village owner\r\n    modifier isVillageOwner(address _Village) {\r\n        require(Game.VillageOwner[_Village] == msg.sender,\"User is not Village owner\");\r\n        _;\r\n    }\r\n    //check caller is Village\r\n    modifier isVillage() {\r\n        require(Game.VillageOwner[msg.sender] != address(0),\"caller is not Village\");\r\n        _;\r\n    }\r\n    /**\r\n    * check User has Gem to pay\r\n    * @param _amount Gem amount\r\n    */\r\n    modifier HaveGem(uint256 _amount) {\r\n        require(Game.Players[msg.sender].GemsCount >= _amount,\"insufficient balance\");\r\n        _;\r\n    }\r\n    /**\r\n    * Check given index is  vaild in address array\r\n    * @param _array address array to be checked\r\n    * @param _position index of array\r\n    */\r\n    modifier isArrayIndex(address[] memory _array,uint256 _position) {\r\n        require(_position >= 0 && _position < _array.length,\"Invalid Array Index\");\r\n        _;\r\n    }\r\n     /**\r\n    * Check given index is  vaild by giving array length\r\n    * @param _length array length to be checked\r\n    * @param _position index of array\r\n    */\r\n    modifier isArrayLength(uint256 _length,uint256 _position) {\r\n        require(_position >= 0 && _position < _length,\"Invalid Array Length\");\r\n        _;\r\n    }\r\n    // modifier isSameAddress(address _address1,address _address2) {\r\n    //     require(_address1 == _address2,\"Address not equal\");\r\n    //     _;\r\n    // }\r\n     /**\r\n    * Check Two address is equal\r\n    * @param _address1 first address\r\n    * @param _address2 second address\r\n    */\r\n    function isSameAddress(address _address1,address _address2) internal pure{\r\n        require(_address1 == _address2,\"Address not equal\");\r\n    }\r\n     /**\r\n    * Check Two address is not equal\r\n    * @param _address1 first address\r\n    * @param _address2 second address\r\n    */\r\n    function isNotSameAddress(address _address1,address _address2) internal pure{\r\n        require(_address1 != _address2,\"Address is equal\");\r\n    }\r\n    /**\r\n    * Check Two uint is equal\r\n    * @param _value1 first value\r\n    * @param _value2 second value\r\n    */\r\n    function isSameValue(uint256 _value1,uint256 _value2) internal pure{\r\n        require(_value1 == _value2,\"Value not equal\");\r\n    }\r\n}",
  "sourcePath": "E:\\KBA\\ethereum\\project\\Docker\\Truffle\\contracts\\CC-modifiers.sol",
  "ast": {
    "absolutePath": "/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-modifiers.sol",
    "exportedSymbols": {
      "CCmodifiers": [
        350
      ]
    },
    "id": 351,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 209,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-variables.sol",
        "file": "./CC-variables.sol",
        "id": 210,
        "nodeType": "ImportDirective",
        "scope": 351,
        "sourceUnit": 1354,
        "src": "25:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 211,
              "name": "CCvariables",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1353,
              "src": "79:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CCvariables_$1353",
                "typeString": "contract CCvariables"
              }
            },
            "id": 212,
            "nodeType": "InheritanceSpecifier",
            "src": "79:11:1"
          }
        ],
        "contractDependencies": [
          1353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 350,
        "linearizedBaseContracts": [
          350,
          1353
        ],
        "name": "CCmodifiers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "174:109:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 217,
                              "name": "Game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "193:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CCModel_$99_storage",
                                "typeString": "struct CClibrary.CCModel storage ref"
                              }
                            },
                            "id": 218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VillageOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "193:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 219,
                            "name": "_Village",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "211:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "193:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 221,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4224,
                            "src": "224:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "224:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "193:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "55736572206973206e6f742056696c6c616765206f776e6572",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "235:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fca1e8894e9aa46aff2656a3ca8d4a6532ef093b54dac7effcd5fefdb4514837",
                          "typeString": "literal_string \"User is not Village owner\""
                        },
                        "value": "User is not Village owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fca1e8894e9aa46aff2656a3ca8d4a6532ef093b54dac7effcd5fefdb4514837",
                          "typeString": "literal_string \"User is not Village owner\""
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "185:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "185:78:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "185:78:1"
                },
                {
                  "id": 227,
                  "nodeType": "PlaceholderStatement",
                  "src": "274:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 229,
            "name": "isVillageOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_Village",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "156:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "155:18:1"
            },
            "src": "132:151:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "341:107:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 232,
                              "name": "Game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "360:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CCModel_$99_storage",
                                "typeString": "struct CClibrary.CCModel storage ref"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VillageOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "360:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 236,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4224,
                              "src": "378:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "378:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "360:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "401:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "393:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "393:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "360:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c6572206973206e6f742056696c6c616765",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "404:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3d04e62d8189034a143d49c92e99941d6cbdbce2bb178fe98bcfd1570f5c531",
                          "typeString": "literal_string \"caller is not Village\""
                        },
                        "value": "caller is not Village"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3d04e62d8189034a143d49c92e99941d6cbdbce2bb178fe98bcfd1570f5c531",
                          "typeString": "literal_string \"caller is not Village\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "352:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "352:76:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "352:76:1"
                },
                {
                  "id": 244,
                  "nodeType": "PlaceholderStatement",
                  "src": "439:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "name": "isVillage",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:2:1"
            },
            "src": "320:128:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "571:108:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 251,
                                "name": "Game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "590:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CCModel_$99_storage",
                                  "typeString": "struct CClibrary.CCModel storage ref"
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Players",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 89,
                              "src": "590:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PlayerModel_$11_storage_$",
                                "typeString": "mapping(address => struct CClibrary.PlayerModel storage ref)"
                              }
                            },
                            "id": 255,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 253,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4224,
                                "src": "603:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "603:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "590:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerModel_$11_storage",
                              "typeString": "struct CClibrary.PlayerModel storage ref"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "GemsCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "590:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 257,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "628:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "590:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e73756666696369656e742062616c616e6365",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "636:22:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                          "typeString": "literal_string \"insufficient balance\""
                        },
                        "value": "insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                          "typeString": "literal_string \"insufficient balance\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "582:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "582:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "582:77:1"
                },
                {
                  "id": 262,
                  "nodeType": "PlaceholderStatement",
                  "src": "670:1:1"
                }
              ]
            },
            "documentation": "check User has Gem to pay\r\n@param _amount Gem amount\r",
            "id": 264,
            "name": "HaveGem",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "554:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:17:1"
            },
            "src": "537:142:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "907:105:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "926:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "939:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "926:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 275,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "944:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 276,
                              "name": "_array",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "956:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "956:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "944:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "926:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420417272617920496e646578",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:21:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45aaad090780855d471ba9c9edce87d92efbf346b88e729608a95699e2e6b66f",
                          "typeString": "literal_string \"Invalid Array Index\""
                        },
                        "value": "Invalid Array Index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45aaad090780855d471ba9c9edce87d92efbf346b88e729608a95699e2e6b66f",
                          "typeString": "literal_string \"Invalid Array Index\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "918:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "918:74:1"
                },
                {
                  "id": 283,
                  "nodeType": "PlaceholderStatement",
                  "src": "1003:1:1"
                }
              ]
            },
            "documentation": "Check given index is  vaild in address array\r\n@param _array address array to be checked\r\n@param _position index of array\r",
            "id": 285,
            "name": "isArrayIndex",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "name": "_array",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "864:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 265,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "864:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 266,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "864:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "name": "_position",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "888:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "863:43:1"
            },
            "src": "842:170:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "1240:100:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 292,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "1259:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1272:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1259:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 295,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "1277:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 296,
                            "name": "_length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "1289:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1277:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1259:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964204172726179204c656e677468",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1297:22:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9832d08344c014250cf79138bdf9c75526859a3e170ac67a4673082973a3ef0",
                          "typeString": "literal_string \"Invalid Array Length\""
                        },
                        "value": "Invalid Array Length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9832d08344c014250cf79138bdf9c75526859a3e170ac67a4673082973a3ef0",
                          "typeString": "literal_string \"Invalid Array Length\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "1251:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:69:1"
                },
                {
                  "id": 302,
                  "nodeType": "PlaceholderStatement",
                  "src": "1331:1:1"
                }
              ]
            },
            "documentation": "Check given index is  vaild by giving array length\r\n@param _length array length to be checked\r\n@param _position index of array\r",
            "id": 304,
            "name": "isArrayLength",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "_length",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1205:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 289,
                  "name": "_position",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1221:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:35:1"
            },
            "src": "1182:158:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "1708:70:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 312,
                          "name": "_address1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "1727:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "_address2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 308,
                          "src": "1740:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1727:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206e6f7420657175616c",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:19:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48aa5f7effe09a96e5efb9500e6e021979a6261846fa4d01002ada0238b25f1f",
                          "typeString": "literal_string \"Address not equal\""
                        },
                        "value": "Address not equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48aa5f7effe09a96e5efb9500e6e021979a6261846fa4d01002ada0238b25f1f",
                          "typeString": "literal_string \"Address not equal\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "1719:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:51:1"
                }
              ]
            },
            "documentation": "Check Two address is equal\r\n@param _address1 first address\r\n@param _address2 second address\r",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSameAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "name": "_address1",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "1658:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "name": "_address2",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "1676:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:37:1"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1708:0:1"
            },
            "scope": 350,
            "src": "1635:143:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "1993:69:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "_address1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "2012:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 328,
                          "name": "_address2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "2025:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2012:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320697320657175616c",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:18:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92619da785123608e463555e911237c2038b23c80726a4880686e616ce167a4a",
                          "typeString": "literal_string \"Address is equal\""
                        },
                        "value": "Address is equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92619da785123608e463555e911237c2038b23c80726a4880686e616ce167a4a",
                          "typeString": "literal_string \"Address is equal\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "2004:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2004:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2004:50:1"
                }
              ]
            },
            "documentation": "Check Two address is not equal\r\n@param _address1 first address\r\n@param _address2 second address\r",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNotSameAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "name": "_address1",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1943:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "name": "_address2",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1961:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1942:37:1"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1993:0:1"
            },
            "scope": 350,
            "src": "1917:145:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "2252:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 342,
                          "name": "_value1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "2271:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 343,
                          "name": "_value2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "2282:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2271:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c7565206e6f7420657175616c",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2290:17:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d3f31ad21f0acf09395b8d49f46feb4966ae8b48c1bfaea26a0f40deea4418e",
                          "typeString": "literal_string \"Value not equal\""
                        },
                        "value": "Value not equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d3f31ad21f0acf09395b8d49f46feb4966ae8b48c1bfaea26a0f40deea4418e",
                          "typeString": "literal_string \"Value not equal\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "2263:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:45:1"
                }
              ]
            },
            "documentation": "Check Two uint is equal\r\n@param _value1 first value\r\n@param _value2 second value\r",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSameValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "name": "_value1",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "2206:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 338,
                  "name": "_value2",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "2222:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2205:33:1"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2252:0:1"
            },
            "scope": 350,
            "src": "2185:131:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 351,
        "src": "55:2264:1"
      }
    ],
    "src": "0:2319:1"
  },
  "legacyAST": {
    "absolutePath": "/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-modifiers.sol",
    "exportedSymbols": {
      "CCmodifiers": [
        350
      ]
    },
    "id": 351,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 209,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/E/KBA/ethereum/project/Docker/Truffle/contracts/CC-variables.sol",
        "file": "./CC-variables.sol",
        "id": 210,
        "nodeType": "ImportDirective",
        "scope": 351,
        "sourceUnit": 1354,
        "src": "25:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 211,
              "name": "CCvariables",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1353,
              "src": "79:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CCvariables_$1353",
                "typeString": "contract CCvariables"
              }
            },
            "id": 212,
            "nodeType": "InheritanceSpecifier",
            "src": "79:11:1"
          }
        ],
        "contractDependencies": [
          1353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 350,
        "linearizedBaseContracts": [
          350,
          1353
        ],
        "name": "CCmodifiers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "174:109:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 217,
                              "name": "Game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "193:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CCModel_$99_storage",
                                "typeString": "struct CClibrary.CCModel storage ref"
                              }
                            },
                            "id": 218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VillageOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "193:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 219,
                            "name": "_Village",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "211:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "193:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 221,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4224,
                            "src": "224:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "224:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "193:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "55736572206973206e6f742056696c6c616765206f776e6572",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "235:27:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fca1e8894e9aa46aff2656a3ca8d4a6532ef093b54dac7effcd5fefdb4514837",
                          "typeString": "literal_string \"User is not Village owner\""
                        },
                        "value": "User is not Village owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fca1e8894e9aa46aff2656a3ca8d4a6532ef093b54dac7effcd5fefdb4514837",
                          "typeString": "literal_string \"User is not Village owner\""
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "185:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "185:78:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "185:78:1"
                },
                {
                  "id": 227,
                  "nodeType": "PlaceholderStatement",
                  "src": "274:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 229,
            "name": "isVillageOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_Village",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "156:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "155:18:1"
            },
            "src": "132:151:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "341:107:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 232,
                              "name": "Game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "360:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CCModel_$99_storage",
                                "typeString": "struct CClibrary.CCModel storage ref"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VillageOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85,
                            "src": "360:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 236,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4224,
                              "src": "378:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "378:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "360:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "401:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "393:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "393:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "360:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c6572206973206e6f742056696c6c616765",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "404:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3d04e62d8189034a143d49c92e99941d6cbdbce2bb178fe98bcfd1570f5c531",
                          "typeString": "literal_string \"caller is not Village\""
                        },
                        "value": "caller is not Village"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3d04e62d8189034a143d49c92e99941d6cbdbce2bb178fe98bcfd1570f5c531",
                          "typeString": "literal_string \"caller is not Village\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "352:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "352:76:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "352:76:1"
                },
                {
                  "id": 244,
                  "nodeType": "PlaceholderStatement",
                  "src": "439:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "name": "isVillage",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:2:1"
            },
            "src": "320:128:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "571:108:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 251,
                                "name": "Game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "590:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CCModel_$99_storage",
                                  "typeString": "struct CClibrary.CCModel storage ref"
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Players",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 89,
                              "src": "590:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PlayerModel_$11_storage_$",
                                "typeString": "mapping(address => struct CClibrary.PlayerModel storage ref)"
                              }
                            },
                            "id": 255,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 253,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4224,
                                "src": "603:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "603:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "590:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PlayerModel_$11_storage",
                              "typeString": "struct CClibrary.PlayerModel storage ref"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "GemsCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "590:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 257,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 248,
                          "src": "628:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "590:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e73756666696369656e742062616c616e6365",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "636:22:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                          "typeString": "literal_string \"insufficient balance\""
                        },
                        "value": "insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
                          "typeString": "literal_string \"insufficient balance\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "582:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "582:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "582:77:1"
                },
                {
                  "id": 262,
                  "nodeType": "PlaceholderStatement",
                  "src": "670:1:1"
                }
              ]
            },
            "documentation": "check User has Gem to pay\r\n@param _amount Gem amount\r",
            "id": 264,
            "name": "HaveGem",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "554:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "553:17:1"
            },
            "src": "537:142:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "907:105:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "926:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "939:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "926:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 275,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "944:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 276,
                              "name": "_array",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "956:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "956:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "944:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "926:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420417272617920496e646578",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:21:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45aaad090780855d471ba9c9edce87d92efbf346b88e729608a95699e2e6b66f",
                          "typeString": "literal_string \"Invalid Array Index\""
                        },
                        "value": "Invalid Array Index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45aaad090780855d471ba9c9edce87d92efbf346b88e729608a95699e2e6b66f",
                          "typeString": "literal_string \"Invalid Array Index\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "918:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "918:74:1"
                },
                {
                  "id": 283,
                  "nodeType": "PlaceholderStatement",
                  "src": "1003:1:1"
                }
              ]
            },
            "documentation": "Check given index is  vaild in address array\r\n@param _array address array to be checked\r\n@param _position index of array\r",
            "id": 285,
            "name": "isArrayIndex",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "name": "_array",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "864:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 265,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "864:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 266,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "864:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "name": "_position",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "888:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "863:43:1"
            },
            "src": "842:170:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "1240:100:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 292,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "1259:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1272:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1259:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 295,
                            "name": "_position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "1277:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 296,
                            "name": "_length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "1289:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1277:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1259:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964204172726179204c656e677468",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1297:22:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9832d08344c014250cf79138bdf9c75526859a3e170ac67a4673082973a3ef0",
                          "typeString": "literal_string \"Invalid Array Length\""
                        },
                        "value": "Invalid Array Length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9832d08344c014250cf79138bdf9c75526859a3e170ac67a4673082973a3ef0",
                          "typeString": "literal_string \"Invalid Array Length\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "1251:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:69:1"
                },
                {
                  "id": 302,
                  "nodeType": "PlaceholderStatement",
                  "src": "1331:1:1"
                }
              ]
            },
            "documentation": "Check given index is  vaild by giving array length\r\n@param _length array length to be checked\r\n@param _position index of array\r",
            "id": 304,
            "name": "isArrayLength",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "_length",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1205:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 289,
                  "name": "_position",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1221:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:35:1"
            },
            "src": "1182:158:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "1708:70:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 312,
                          "name": "_address1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "1727:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "_address2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 308,
                          "src": "1740:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1727:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206e6f7420657175616c",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:19:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48aa5f7effe09a96e5efb9500e6e021979a6261846fa4d01002ada0238b25f1f",
                          "typeString": "literal_string \"Address not equal\""
                        },
                        "value": "Address not equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48aa5f7effe09a96e5efb9500e6e021979a6261846fa4d01002ada0238b25f1f",
                          "typeString": "literal_string \"Address not equal\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "1719:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:51:1"
                }
              ]
            },
            "documentation": "Check Two address is equal\r\n@param _address1 first address\r\n@param _address2 second address\r",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSameAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "name": "_address1",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "1658:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "name": "_address2",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "1676:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:37:1"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1708:0:1"
            },
            "scope": 350,
            "src": "1635:143:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "1993:69:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "_address1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "2012:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 328,
                          "name": "_address2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "2025:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2012:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320697320657175616c",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:18:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92619da785123608e463555e911237c2038b23c80726a4880686e616ce167a4a",
                          "typeString": "literal_string \"Address is equal\""
                        },
                        "value": "Address is equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92619da785123608e463555e911237c2038b23c80726a4880686e616ce167a4a",
                          "typeString": "literal_string \"Address is equal\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "2004:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2004:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2004:50:1"
                }
              ]
            },
            "documentation": "Check Two address is not equal\r\n@param _address1 first address\r\n@param _address2 second address\r",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNotSameAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "name": "_address1",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1943:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "name": "_address2",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "1961:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1942:37:1"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1993:0:1"
            },
            "scope": 350,
            "src": "1917:145:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "2252:64:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 342,
                          "name": "_value1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "2271:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 343,
                          "name": "_value2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "2282:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2271:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c7565206e6f7420657175616c",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2290:17:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d3f31ad21f0acf09395b8d49f46feb4966ae8b48c1bfaea26a0f40deea4418e",
                          "typeString": "literal_string \"Value not equal\""
                        },
                        "value": "Value not equal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d3f31ad21f0acf09395b8d49f46feb4966ae8b48c1bfaea26a0f40deea4418e",
                          "typeString": "literal_string \"Value not equal\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4227,
                        4228
                      ],
                      "referencedDeclaration": 4228,
                      "src": "2263:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2263:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:45:1"
                }
              ]
            },
            "documentation": "Check Two uint is equal\r\n@param _value1 first value\r\n@param _value2 second value\r",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSameValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "name": "_value1",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "2206:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 338,
                  "name": "_value2",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "2222:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2205:33:1"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2252:0:1"
            },
            "scope": 350,
            "src": "2185:131:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 351,
        "src": "55:2264:1"
      }
    ],
    "src": "0:2319:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-12T13:16:28.106Z",
  "devdoc": {
    "methods": {
      "GetAvailableSellOrders()": {
        "return": "village address list\rseller address list\rthis village position in seller town list\rsell price list\r"
      },
      "GetBuildingUpgrades(uint256,uint256)": {
        "params": {
          "_ID": "Building ID\r",
          "_level": "Building level\r"
        },
        "return": "_RequiredBuilding Required Building ID to Upgarde\r_RequiredLevel Required Building Level to Upgrade\r_RequiredGold  Required Gold to upgrade\r_RequiredElixr Required Elixr to upgrade\r_RequiredGem Required Gem to upgrade\r_GoldRate Change in gold production rate\r_ElixrRate Change in elixr production rate\r_GemReward amount of gem reward to user\r_Time Cool off time to next Upgrade\r"
      },
      "GetBuildings()": {
        "return": "_id array of Builing IDs \r_name array of name of builings\r_image array of swarm hash of builings\r"
      },
      "GetFilledSellOrders()": {
        "return": "village address list\rseller address list\rbuyer address list\rsell price list\r"
      },
      "GetPlayerDetails(address)": {
        "params": {
          "_player": "Player Address\r"
        },
        "return": "_Towns Player TownList\r_GemsCount Player  Gem balance\r"
      },
      "GetPlayerGems(address)": {
        "params": {
          "_player": "Player Address\r"
        },
        "return": "_GemsCount Player  Gem balance\r"
      },
      "GetToopsDetails(uint256)": {
        "params": {
          "_ID": "troop ID\r"
        },
        "return": "_Defence Change in Defence power\r_Attack Change in Attack Power\r_Steal Change in Steal power\r_RequiredGold  Required Gold to upgrade\r_RequiredElixr Required Elixr to upgrade\r_RequiredGem Required Gem to upgrade\r_Time Time Required to upgrade troop\r"
      },
      "GetTroops()": {
        "return": "_id array of troop IDs\r_name array of name of troop\r_image array of swarm hash of troop\r"
      },
      "GetVillageOwner(address)": {
        "params": {
          "_village": "Village address\r"
        },
        "return": "Village owner address\r"
      },
      "GetVillages()": {
        "return": "Villages\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "GetAvailableSellOrders()": {
        "notice": "function to Get Filled Sell Orders .\r"
      },
      "GetBuildingUpgrades(uint256,uint256)": {
        "notice": "function to Get Building Upgarede Detail .\r"
      },
      "GetBuildings()": {
        "notice": "function to Get All Builings\r"
      },
      "GetFilledSellOrders()": {
        "notice": "function to Get Filled Sell Orders .\r"
      },
      "GetPlayerDetails(address)": {
        "notice": "function to Get Player Details .\r"
      },
      "GetPlayerGems(address)": {
        "notice": "function to Get Player Gem count\r"
      },
      "GetToopsDetails(uint256)": {
        "notice": "function to Get Troops training Detail .\r"
      },
      "GetTroops()": {
        "notice": "function to Get All troops\r"
      },
      "GetVillageOwner(address)": {
        "notice": "function to Get Village owner .\r"
      },
      "GetVillages()": {
        "notice": "function to Get All Villages Excluding Caller Village.\r"
      }
    }
  }
}